{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","enlaces","querySelectorAll","console","log","forEach","enlace","addEventListener","e","preventDefault","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","cerrarImagen","textContent","body"],"mappings":"AAQA,SAAAA,iBAIA,MAAAC,EAAAC,SAAAC,cAAA,WAEA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eACAL,EAAAM,UAAAC,OAAA,QAEAP,EAAAM,UAAAE,IAAA,WAMAC,QAAAR,SAAAC,cAAA,oBAKA,SAAAQ,YAEA,MAAAC,EAAAV,SAAAW,iBAAA,2BACAC,QAAAC,IAAAH,GAGAA,EAAAI,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAKAlB,SAAAC,cAAAgB,EAAAE,OAAAC,WAAAC,KAAAC,OAGAC,eAAA,CACAC,SAAA,iBCzCA,SAAAC,eACA,MAAAC,EAAA1B,SAAAC,cAAA,qBAGA,IAAA,IAAA0B,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAA5B,SAAA6B,cAAA,OAEAD,EAAAE,IAAA,mBAAAH,SAEAC,EAAAG,QAAAC,SAAAL,EAGAC,EAAAK,QAAAC,cAGA,MAAAC,EAAAnC,SAAA6B,cAAA,MAEAM,EAAAC,YAAAR,GAGAF,EAAAU,YAAAD,IAIA,SAAAD,cAAAjB,GAKA,MAAAoB,EAAAC,SAAArB,EAAAE,OAAAY,QAAAC,UAEAJ,EAAA5B,SAAA6B,cAAA,OAEAD,EAAAE,IAAA,oBAAAO,SAEA,MAAAE,EAAAvC,SAAA6B,cAAA,OAEAU,EAAAH,YAAAR,GAEAW,EAAAlC,UAAAE,IAAA,WAGAgC,EAAAN,QAAA,WACAM,EAAAjC,UAIA,MAAAkC,EAAAxC,SAAA6B,cAAA,KACAW,EAAAC,YAAA,IACAD,EAAAnC,UAAAE,IAAA,cAEAgC,EAAAH,YAAAI,GAGAA,EAAAP,QAAA,WACAM,EAAAjC,UAIA,MAAAoC,EAAA1C,SAAAC,cAAA,QAEAyC,EAAAN,YAAAG,GAGAG,EAAArC,UAAAE,IAAA,cDpEAP,SAAAgB,iBAAA,oBAAA,WACAP,YAEAX,oBCHAE,SAAAgB,iBAAA,oBAAA,WACAS","file":"bundle.js","sourcesContent":["// Efecto Scrol View\ndocument.addEventListener('DOMContentLoaded', function() {\n    scrollNav();\n\n    navegacionFija();\n});\n\n// para mostrar la barra de navegación fija en el top de la pantalla\nfunction navegacionFija() {\n    // registrar en Intersection Observer. Lo creamos\n    // lo que hace es estar observando que un elemento se ve en la pantalla del navegador\n\n    const barra = document.querySelector('.header');\n    // agregamos la clase .fijo a _header.scss para aparecer y desaparecer la barra de menú\n    const observer = new IntersectionObserver( function(entries) {\n        if (entries[0].isIntersecting) {\n            barra.classList.remove('fijo');\n        }else {\n            barra.classList.add('fijo');\n        }\n            \n    });\n\n    // elemento a observar. Lo usamos\n    observer.observe(document.querySelector('.sobre-festival'));\n\n}\n\n\nfunction scrollNav() {\n    // seleccionamos todos los enlaces de .navegacion-principal\n    const enlaces = document.querySelectorAll('.navegacion-principal a');\n    console.log(enlaces);\n\n    // si hay una coleccion de elementos, como este caso, hay que iterar en cada uno para poder usar addEventListener()\n    enlaces.forEach( function( enlace ) {\n        enlace.addEventListener('click', function(e) {\n            e.preventDefault();\n\n            // console.log(e.target.attributes.href.value);\n\n            // esto nos da la sección a la cual le estamos dando click\n            const seccion = document.querySelector(e.target.attributes.href.value);\n\n            // le damos el efecto al scroll. smooth es lento\n            seccion.scrollIntoView({\n                behavior: 'smooth',\n            });\n        });\n    });\n\n}","// cuando el documento este listo\ndocument.addEventListener('DOMContentLoaded', function() {\n    crearGaleria();\n});\n\nfunction crearGaleria() {\n    const galeria = document.querySelector('.galeria-imagenes');\n\n    // genero las 12 imagenes que estan en build/img/thumb\n    for( let i = 1; i <=12; i++) {\n        const imagen = document.createElement('IMG');\n        // ahora el src. Donde están las imagenes\n        imagen.src = `build/img/thumb/${i}.webp`;\n        // esto es para saber a que imagen le damos click y así poder hacerla grande\n        imagen.dataset.imagenId = i;\n\n        // añadir la funcion mostrarImagen()\n        imagen.onclick = mostrarImagen;\n\n        // genero el <li>\n        const lista = document.createElement('LI');\n        // en el <li> añadimos las imágenes\n        lista.appendChild(imagen);\n\n        // terminamos agregando los <li> a la galería\n        galeria.appendChild(lista);\n    }\n}\n\nfunction mostrarImagen(e) {\n    // así se ha que foto le han dado\n    // console.log(typeof e.target.dataset.imagenId);\n\n    // como es un string el número que me da, lo paso a número\n    const id = parseInt(e.target.dataset.imagenId);\n    // Genera la imagen en grande y genero el html\n    const imagen = document.createElement('IMG');\n    // le paso la url de la imagen grande\n    imagen.src = `build/img/grande/${id}.webp`;\n    // genero el overlay. Cuando muestra la imagen el fondo se hace oscuro.\n    const overlay = document.createElement('DIV');\n    // agrego la imagen\n    overlay.appendChild(imagen);\n    // agregamos una clase css para mostrar dicha imagen en el centro de la página\n    overlay.classList.add('overlay');\n\n    // si damos click en el overlay se cierra la imagen\n    overlay.onclick = function() {\n        overlay.remove();\n    }\n\n    // Botón para cerrar la imagen\n    const cerrarImagen = document.createElement('P');\n    cerrarImagen.textContent = 'X';\n    cerrarImagen.classList.add('btn-cerrar');\n    // lo agrego a la imagen\n    overlay.appendChild(cerrarImagen);\n\n    // cuando se presiona la X, se cierra la imagen\n    cerrarImagen.onclick = function() {\n        overlay.remove();\n    }\n\n    // mostrar en el html\n    const body = document.querySelector('body');\n    // agrego la imagen al body\n    body.appendChild(overlay);\n\n    // fijamos el fondo para no poder hacer scroll. Lo hacemos en el body en _globales.scss\n    body.classList.add('fijar-body');\n\n}"]}